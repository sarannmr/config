#------------------BASIC--------------

# C-b is not acceptable -- Vim uses it
unbind C-b
set-option -g prefix `
bind-key b send-prefix

# Start numbering at 1
set -g base-index 1

# -----------------WINDOW Binding ---------------
bind -n M-Right next-window
bind -n M-Left previous-window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

bind n new-window

# Window splitting
unbind-key M--      ; bind-key -n M--   split-window -v
unbind-key M-\      ; bind-key -n M-\   split-window -h
unbind-key \        ; bind-key \        split-window -h
unbind-key |        ; bind-key |        split-window -h
unbind-key -        ; bind-key -        split-window -v

# Split window rebinding
unbind %
bind \ split-window -h
bind _ split-window -v

# Highlight active window
set-window-option -g window-status-current-bg cyan

# ----------------Pane Binding ------------------------
# Pane selection and resizing
unbind-key j        ; bind-key -r j     resize-pane -D 5
unbind-key k        ; bind-key -r k     resize-pane -U 5
unbind-key h        ; bind-key -r h     resize-pane -L 5
unbind-key l        ; bind-key -r l     resize-pane -R 5
#unbind-key C-left   ; bind-key -r C-left    resize-pane -L 1
#unbind-key C-right  ; bind-key -r C-right   resize-pane -R 1
#unbind-key C-up     ; bind-key -r C-up  resize-pane -U 1
#unbind-key C-down   ; bind-key -r C-down    resize-pane -D 1

# Rotate Pane
unbind-key C-Up			; bind-key -n C-Up select-pane -U
unbind-key C-Down		; bind-key -n C-Down select-pane -D
unbind-key C-Left			; bind-key -n C-Left select-pane -L
unbind-key C-Right		; bind-key -n C-Right select-pane -R

# Maximize and unmaximize
#unbind +
#bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
#unbind -
#bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# -------------STATUS BAR -------------------------------
# status bar
set-option -g status-utf8 on

# default statusbar colors
set -g status-fg white
set -g status-bg default
set -g status-attr bright

# default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# statusline
#set -g status-left '#[fg=green] [ #H ] ['
set -g status-left '#[fg=green][ #H #(speed bnep0) ] ['
set -g status-right '#[fg=green]][ #[fg=white]%l:%M:%S %p #[fg=blue]%a %b %d #[fg=green]]'

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 60
set -g status-right-length 140
#set -g status-right '#[fg=green]][ #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'


# ----------------EVERYTHING ELSE ------------------------
# Large History
set-option -g history-limit 10000

# automatically set window title
set -g automatic-rename

# Support for 256 colors
set -g default-terminal "screen-256color"

# Set mouse bindings
#set -g mouse-select-pane on
#set -g mouse-resize-pane on
#set -g mouse-select-window on
#setw -g mode-mouse on

# bind vi key-mapping
set -g status-keys vi
set -g mode-keys vi

# Allows for faster key repetition
set -s escape-time 0

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
#bind-key a send-prefix

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Vi copypaste mode
#set-window-option -g mode-keys vi
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection

# reload config
#bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# auto window rename
#set-window-option -g automatic-rename

# rm mouse mode fail
#set -g mode-mouse off
new true
set set-remain-on-exit on

# create the windows we really want
new -n empty
neww -n work
#splitw -h -p 50
#splitw -v -p 50
neww -d -n compile
#splitw -d -h -p 50 -t compile
neww -d -n gtalk 

# for future windows, revert r-o-e to global value
set -u set-remain-on-exit

